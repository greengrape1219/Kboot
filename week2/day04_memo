# tuple

a = 'harry',
b = ('harry',)
c = ()  # empty tuple
d = 'harry', 'ron'  # packing
e = ('hermione')  # string
f = ('harry', 'ron')  # packing
g = ('hermione',)  # string
print(g, id(g))
g = g + f  # concatenation 연쇄
print(g, id(g))

print(f[1])
x, y = f  # unpacking
print(y)

print(type(a))
print(type(b))
print(type(c))
print(type(d))
print(type(e))
print(type(f))

# list
big_bang = ['GD', '태양', '탑', '대성', '승리']
exo = ['백현', '첸']
# big_bang.append('인하')
big_bang.insert(1, '인하')
# print(big_bang * 2)

# exo.extend(big_bang)
# exo = exo + big_bang
exo.append(big_bang)
print(exo)
print(exo[2][2])  # 태양
print(exo[-1][-4])  # 태양
exo[-2] = '시우민'
print(exo)
# print(exo.pop())  # 빅뱅 pop
print(exo[2].pop())  # 승리 pop
print(exo)
print(exo[2].pop(-2))  # 탑 pop
print(exo)
del exo[2][-1]  # 대성 delete
print(exo)
# exo.remove('인하')  # not in exo
exo[2].remove('인하')
print(exo)
exo.clear()
print(exo)

# scores = ('B+', 'A+', 'C+')
# print(scores[1], scores[2])
# temp = list(scores)
# temp[1] = 'C+'
# temp[2] = 'A+'
# scores = tuple(temp)
# print(scores[1], scores[2])

# import copy
# a = [1, 2, [5, -9]]
# b = copy.deepcopy(a)
# a[2][1] = 7  # mutable, deepcopy
# print(a, b)

a = [1, 2, [5, -9]]
b = a.copy()
c = list(a)
d = a[:]
a[1] = -77  # immutable
a[2][1] = 7  # mutable, b/c/d affects
print(a, b, c, d)


# a = [1, 2, 3]
# b = a.copy()
# c = list(a)
# d = a[:]
# a[2] = 'sw'  # immutable
# print(a, b, c, d)


primes = [2, 19, 3, 5, 7, 11]
primes_cp = primes
print(primes)
print(primes_cp)
primes[-1] = 'lunch time'
print(primes)
print(primes_cp)
primes_cp[0] = 'morning coffee'
print(primes)
print(primes_cp)


# # TypeError: '<' not supported between instances of 'str' and 'int'
# # mixed = [6, 4, 5, 'A', 7, '트와이스', 'B', 'b', '마마무']
# mixed = ['6', '4', '5', 'A', '7', '트와이스', 'B', 'b', '마마무']
# # mixed.sort()
# mixed.sort(reverse=True)
# print(mixed)

# primes = [2, 19, 3.0, 5, 7, 11]
# print(primes)
# primes.sort()
# print(primes)

# primes = [2, 19, 3.0, 5, 7, 11]
# primes_sorted = sorted(primes)
# print(primes)
# print(primes_sorted)


# list comprehension, generator
odd_lists = [i for i in range(1, 11) if i % 2 == 1]
print(odd_lists, type(odd_lists))

odd_tuples = (i for i in range(1, 11) if i % 2 == 1)
print(odd_tuples, type(odd_tuples))

# odd_lists = []
# for i in range(1, 11):
#     if i % 2 == 1:
#         odd_lists.append(i)
# print(odd_lists)

# ex 7-4, 7-5, 7-6, 7-7
things = ["mozzarella", "cinderella", "salmonella"]
things[-2] = things[-2].title()
print(things)
things[0] = things[0].upper()
print(things)
print(f'Delete the {things.pop()} from things, get Nobel Prize')
print(things)

# for thing in things:
#     print(thing.title())